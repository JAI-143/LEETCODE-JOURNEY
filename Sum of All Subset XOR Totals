from functools import reduce 
from operator import xor
from itertools import combinations
class Solution:
    def subsetXORSum(self, nums: List[int]) -> int:
        sub=[]
        for j in range(len(nums)+1):
            for k in combinations(nums,j):
                if len(k)>=1:

                    sub.append(list(k))
        x=[reduce(xor,h) for h in sub]
        return sum(x)
